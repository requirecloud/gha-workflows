name: Create Zero Trust SSH connection

on:
  workflow_call:
    inputs:
      zerotrust:
        description: 'Which Zero Trust service to use'
        required: true
        type: string
        default: tailscale # options are tailscale or twingate
      ssh_host:
        description: 'SSH host to set in ssh config'
        required: false
        type: string
        default: ''

jobs:

  zero-trust-ssh:

    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:

      - name: Setup Tailscale connection
        if: ${{ inputs.zerotrust == 'tailscale' }}
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci
          use-cache: 'true'

      - name: Setup Twingate connection
        if: ${{ inputs.zerotrust == 'twingate' }}
        uses: twingate/github-action@v1
        with:
          service-key: ${{ secrets.TWINGATE_SERVICE_KEY }}

      - name: Setup SSH key with known hosts
        if: ${{ secrets.KNOWN_HOSTS != '' }}
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PRIVATE_SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Setup SSH key without known hosts
        if: ${{ secrets.KNOWN_HOSTS == '' && inputs.ssh_host != '' }}
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PRIVATE_SSH_KEY }}
          known_hosts: unnecessary
          if_key_exists: replace
          config: |
            Host ${{ input.SSH_HOST }}
              HostName ${{ input.SSH_HOST }}
              StrictHostKeyChecking no
              ControlMaster auto
              ControlPath ~/.ssh/control-%C
              ControlPersist yes
